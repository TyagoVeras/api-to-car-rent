// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          String   @id @default(uuid())
  name        String
  description String
  created_at  DateTime @default(now())
  Cars        Cars[]

  @@map("categories")
}

model Specification {
  id                 String               @id @default(uuid())
  name               String
  description        String
  created_at         DateTime             @default(now())
  CarsSpecifications CarsSpecifications[]

  @@map("specifications")
}

model Users {
  id             String  @id @default(uuid())
  name           String
  password       String
  email          String  @unique
  driver_license String
  isAdmin        Boolean @default(false)
  avatar         String?

  @@map("users")
}

model Cars {
  id            String   @id @default(uuid())
  name          String
  description   String
  daily_rate    Float
  available     Boolean  @default(true)
  license_plate String
  fine_amount   Float
  brand         String
  category_id   String
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  category           Category             @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  CarsSpecifications CarsSpecifications[]
  CarImages          CarImages[]

  @@map("cars")
}

model CarsSpecifications {
  car_id           String
  specification_id String

  car           Cars          @relation(fields: [car_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  specification Specification @relation(fields: [specification_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([car_id, specification_id])
  @@map("cars_specifications")
}

model CarImages {
  id         String   @id @default(uuid())
  path       String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  car_id     String

  car Cars @relation(fields: [car_id], references: [id])

  @@map("car_images")
}
